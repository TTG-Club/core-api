/*
 * This file is generated by jOOQ.
 */
package club.ttg.dnd5.jooq.tables.records;


import club.ttg.dnd5.jooq.tables.JooqTranslationAuthors;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TranslationAuthorsRecord extends TableRecordImpl<TranslationAuthorsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.translation_authors.translation_id</code>.
     */
    public void setTranslationId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.translation_authors.translation_id</code>.
     */
    public String getTranslationId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.translation_authors.author_name</code>.
     */
    public void setAuthorName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.translation_authors.author_name</code>.
     */
    public String getAuthorName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TranslationAuthorsRecord
     */
    public TranslationAuthorsRecord() {
        super(JooqTranslationAuthors.TRANSLATION_AUTHORS);
    }

    /**
     * Create a detached, initialised TranslationAuthorsRecord
     */
    public TranslationAuthorsRecord(String translationId, String authorName) {
        super(JooqTranslationAuthors.TRANSLATION_AUTHORS);

        setTranslationId(translationId);
        setAuthorName(authorName);
        resetTouchedOnNotNull();
    }
}
