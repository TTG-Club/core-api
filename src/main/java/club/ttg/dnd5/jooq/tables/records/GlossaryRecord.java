/*
 * This file is generated by jOOQ.
 */
package club.ttg.dnd5.jooq.tables.records;


import club.ttg.dnd5.jooq.tables.JooqGlossary;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class GlossaryRecord extends UpdatableRecordImpl<GlossaryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.glossary.url</code>.
     */
    public void setUrl(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.glossary.url</code>.
     */
    public String getUrl() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.glossary.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.glossary.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.glossary.english</code>.
     */
    public void setEnglish(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.glossary.english</code>.
     */
    public String getEnglish() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.glossary.alternative</code>.
     */
    public void setAlternative(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.glossary.alternative</code>.
     */
    public String getAlternative() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.glossary.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.glossary.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.glossary.image_url</code>.
     */
    public void setImageUrl(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.glossary.image_url</code>.
     */
    public String getImageUrl() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.glossary.is_hidden_entity</code>.
     */
    public void setIsHiddenEntity(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.glossary.is_hidden_entity</code>.
     */
    public Boolean getIsHiddenEntity() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.glossary.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.glossary.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.glossary.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.glossary.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>public.glossary.username</code>.
     */
    public void setUsername(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.glossary.username</code>.
     */
    public String getUsername() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.glossary.tags</code>.
     */
    public void setTags(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.glossary.tags</code>.
     */
    public String getTags() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GlossaryRecord
     */
    public GlossaryRecord() {
        super(JooqGlossary.GLOSSARY);
    }

    /**
     * Create a detached, initialised GlossaryRecord
     */
    public GlossaryRecord(String url, String name, String english, String alternative, String description, String imageUrl, Boolean isHiddenEntity, LocalDateTime createdAt, LocalDateTime updatedAt, String username, String tags) {
        super(JooqGlossary.GLOSSARY);

        setUrl(url);
        setName(name);
        setEnglish(english);
        setAlternative(alternative);
        setDescription(description);
        setImageUrl(imageUrl);
        setIsHiddenEntity(isHiddenEntity);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setUsername(username);
        setTags(tags);
        resetTouchedOnNotNull();
    }
}
